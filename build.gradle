plugins {
	id 'fabric-loom' version '1.6-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	maven { url = "https://maven.shedaniel.me/" } // Cloth Config, REI
	maven { url = "https://maven.quiltmc.org/repository/release" } // Quilt Mappings
	maven { url = "https://api.modrinth.com/maven" } // LazyDFU
	maven { url = "https://maven.terraformersmc.com/releases/" } // Mod Menu, Trinkets
	maven { url = "https://mvn.devos.one/snapshots/" } // Create, Porting Lib, Forge Tags, Milk Lib, Registrate
	maven { url = "https://mvn.devos.one/releases/" } // Porting Lib Releases
	maven { url = "https://raw.githubusercontent.com/Fuzss/modresources/main/maven/" } // Forge Config API Port
	maven { url = "https://maven.jamieswhiteshirt.com/libs-release" } // Reach Entity Attributes
	maven { url = "https://jitpack.io/" } // Mixin Extras, Fabric ASM, Step Height Entity Attribute
	maven { url = "https://maven.tterrag.com/" } // Flywheel
	maven { url = "https://maven.ladysnake.org/releases" } // Cardinal Component API
	maven { url = "https://api.modrinth.com/maven" } // Enchancement
	maven { url = "https://maven.kyrptonaught.dev" } // Custom Portal API
	maven { url = "https://maven.quiltmc.org" } // Quilt Parsers
	maven { url = "https://maven.teamresourceful.com/repository/maven-public/" } // Botarium, Resourceful Lib
	maven { url = "https://maven.isxander.dev/releases" } // YACL
}

dependencies {
	minecraft "com.mojang:minecraft:${minecraft_version}"
	mappings loom.officialMojangMappings()
	modImplementation "net.fabricmc:fabric-loader:${loader_version}"

	modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_api_version}"

	// Create
	modImplementation "com.simibubi.create:create-fabric-${minecraft_version}:${create_version}"

	// Enchancement
	modImplementation "maven.modrinth:enchancement:${enchancement_version}"
	modLocalRuntime "maven.modrinth:tooltipfix:${tooltipfix_version}"
	modLocalRuntime "com.github.emilyploszaj:step-height-entity-attribute:${shea_version}"

	// Midnight Lib (Enchancement dependency but also we use it for config)
	modImplementation "maven.modrinth:midnightlib:${midnightlib_version}"

	// Deeper and Darker
	modImplementation "maven.modrinth:deeperdarker:${deeper_and_darker_version}"
	modLocalRuntime "dev.isxander:yet-another-config-lib:${yacl_version}"
	modLocalRuntime "net.kyrptonaught:customportalapi:${customportalapi_version}"

	// Better Archeology
	modImplementation "maven.modrinth:better-archeology:${better_archeology_version}"
	modLocalRuntime "maven.modrinth:yungs-api:${yungs_api_version}"
	localRuntime "org.reflections:reflections:${reflections_version}"

	// Trinkets
	modImplementation "maven.modrinth:trinkets:${trinkets_version}"
	modImplementation "dev.onyxstudios.cardinal-components-api:cardinal-components-base:${cc_api_version}"
	modImplementation "dev.onyxstudios.cardinal-components-api:cardinal-components-entity:${cc_api_version}"
	modLocalRuntime "maven.modrinth:charm-of-undying:${charm_of_undying_version}"

	// REI
	modImplementation "me.shedaniel:RoughlyEnoughItems-fabric:${rei_version}"

	// Create: Estrogen
	modImplementation "maven.modrinth:estrogen:${estrogen_version}"
	modLocalRuntime "earth.terrarium.botarium:botarium-fabric-${minecraft_version}:${botarium_version}"
	modLocalRuntime "earth.terrarium.baubly:baubly-fabric-${minecraft_version}:${baubly_version}"
	modLocalRuntime "com.teamresourceful.resourcefullib:resourcefullib-fabric-${minecraft_version}:${resourceful_lib_version}"

	// Development QOL
	modLocalRuntime "maven.modrinth:lazydfu:${lazydfu_version}"
	modLocalRuntime "com.terraformersmc:modmenu:${modmenu_version}"
}

processResources {
	inputs.property "version", version
	inputs.property "minecraft_version", minecraft_version
	inputs.property "loader_version", loader_version
	inputs.property "fabric_api_version", fabric_api_version
	filteringCharset "UTF-8"

	filesMatching("fabric.mod.json") {
		expand "version": version,
				"minecraft_version": minecraft_version,
				"loader_version": loader_version,
				"fabric_api_version": fabric_api_version
	}
}

def targetJavaVersion = 17
tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
	if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
		it.options.release.set(targetJavaVersion)
	}
}

java {
	def javaVersion = JavaVersion.toVersion(targetJavaVersion)
	if (JavaVersion.current() < javaVersion) {
		toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
	}

	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}
